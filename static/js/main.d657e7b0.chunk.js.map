{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","WebGLShaderPrecisionFormat","propTypes","header","PropTypes","string","children","Grid","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","console","log","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","popTypes","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d657e7b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg =  styled.img`\n  width: 100px;\n\n  @media screen and (max-width:500px) {\n    width: 80px;\n  }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RMDBLogo from '../../images/react-movie-logo.svg';\n\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <Link to='/'>\n        <LogoImg src={RMDBLogo} alt='rmdb-logo' />\n      </Link>\n      <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\n    </Content>\n  </Wrapper>\n);\n\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  background: linear-gradient(\r\n    to bottom, rgba(0, 0, 0, 0)\r\n    41%, rgba(0, 0, 0, 0.65)\r\n    100%\r\n  ),\r\n    url(${({ image }) => image}), var(--darkGrey);\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroImage 2s;\r\n\r\n  @keyframes animateHeroImage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 40px;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig)\r\n    }\r\n  }\r\n\r\n  p {\r\n    font-size: var(--fontMed);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 720px) {\r\n    maxwidth: 100%;\r\n  }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Styles\r\nimport { Wrapper, Content, Text } from './HeroImage.styles';\r\n\r\nconst HeroImage = ({ image, title, text }) => {\r\n  return (\r\n    <Wrapper image={image}>\r\n      <Content>\r\n        <Text>\r\n          <h1>{title}</h1>\r\n          <p>{text}</p>\r\n        </Text>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n}\r\n\r\nexport default HeroImage;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div `\r\n  /* border: 3px solid pink; */\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  h1 {\r\n    color: var(--medGrey);\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div `\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 2rem;\r\n  /* border: 1px solid lime; */\r\n`;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Styles\r\n\r\nimport { Wrapper, Content } from './Grid.styles';\r\n\r\nconst Grid = ({ header, children }) => (\r\n  <Wrapper>\r\n    <h1>{header}</h1>\r\n    <Content>{children}</Content>\r\n  </Wrapper>\r\n);\r\n\r\nWebGLShaderPrecisionFormat.propTypes = {\r\n  header: PropTypes.string,\r\n  children: PropTypes.string,\r\n}\r\n\r\nexport default Grid;","import styled from 'styled-components';\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  transition: all 0.3s;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n  animation: animateThumb 2s;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n// Styles\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => {\r\n  return (\r\n    <div>\r\n      {clickable ? (\r\n        <Link to={`/${movieId}`}>\r\n          <Image src={image} alt='movie-thumb' />\r\n        </Link>\r\n      ) : (\r\n        <Image src={image} alt='movie-thumb' />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  clickable: PropTypes.bool,\r\n}\r\n\r\nexport default Thumb;\r\n","import { Spinner } from './Spinner.styles';\r\n\r\nexport default Spinner;","import styled from 'styled-components';\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid var(--lightGrey);\r\n  border-top: 5px solid var(--medGrey);\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  height: 55px;\r\n  background: var(--medGrey);\r\n  margin:  auto;\r\n  border-radius: 40px;\r\n  color: var(--white);\r\n\r\n  img {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 14px;\r\n    width: 30px;\r\n  }\r\n\r\n  input {\r\n    font-size: var(--fontBig);\r\n    position: absolute;\r\n    left: 0;\r\n    margin: 8px 0;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: var(--white);\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n\r\n  }\r\n`;","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import Image\r\nimport searchIcon from '../../images/search-icon.svg';\r\n// Styles''\r\nimport { Wrapper, Content } from './SearchBar.styles';\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n  const[state, setState] = useState('');\r\n  const initial = useRef(true);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (initial.current) {\r\n      initial.current = false;\r\n      return;\r\n    }\r\n\r\n    const timer = setTimeout(() => {\r\n      setSearchTerm(state);\r\n    }, 500)\r\n\r\n    return () => clearTimeout(timer)\r\n  }, [setSearchTerm, state])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <img src={searchIcon} alt='serch-icon' />\r\n        <input\r\n          type='text'\r\n          placeholder=\"Search Movie\"\r\n          onChange={event => setState(event.currentTarget.value)}\r\n          value={state}\r\n        />\r\n      </Content>\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  callback: PropTypes.func,\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.button`\r\n  display: block;\r\n  background: var(--darkGrey);\r\n  width: 25%;\r\n  min-width: 200px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  color: var(--white);\r\n  border: 0;\r\n  font-size: var(--fontBig);\r\n  margin: 20px auto;\r\n  transition: all 0.3s;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Styles\r\n\r\nimport { Wrapper } from './Button.styles';\r\n\r\nconst Button = ({ text, callback }) => {\r\n\r\n  return (\r\n    <Wrapper\r\n      type=\"button\"\r\n      onClick={callback}\r\n    >\r\n      {text}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  callback: PropTypes.func,\r\n}\r\n\r\nexport default Button;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect} from 'react';\r\n//API\r\nimport API from '../API';\r\n// Helpers\r\nimport { isPersistedState } from '../helpers';\r\n\r\nconst initialState = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0,\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [state, setState] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n  const fetchMovies = async (searchTerm = '', page) => {\r\n    try {\r\n      setError(false);\r\n      setLoading(true);\r\n\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n\r\n      setState((prev) => ({\r\n        ...movies,\r\n        results:\r\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\r\n      }));\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Initial and search\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      const sessionState = isPersistedState('homeState');\r\n\r\n      if (sessionState) {\r\n        console.log(\"Grabbing from sessionStorage\");\r\n        setState(sessionState);\r\n        return;\r\n      }\r\n    }\r\n    console.log(\"Grabbing from API\");\r\n\r\n    setState(initialState);\r\n    fetchMovies(searchTerm, 1);\r\n  }, [searchTerm]);\r\n\r\n  // Load more\r\n  useEffect(() => {\r\n    if (!isLoadingMore) return;\r\n\r\n    fetchMovies(searchTerm, state.page + 1);\r\n    setIsLoadingMore(false);\r\n  }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n  // Write to sessionStorage\r\n  useEffect(() => {\r\n    if (!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state));\r\n  }, [searchTerm, state]);\r\n\r\n  return { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react';\n\n// Config\nimport { BACKDROP_SIZE, IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n// Components\nimport HeroImage from './HeroImage';\nimport Grid from './Grid/';\nimport Thumb from './Thumb';\nimport Spinner from './Spinner';\nimport SearchBar from './SearchBar';\nimport Button from './Button';\n\n// Hook\nimport { useHomeFetch } from '../hooks/useHomeFetch';\n\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Home = () => {\n  const {\n    state,\n    loading,\n    error,\n    setSearchTerm,\n    searchTerm,\n    setIsLoadingMore\n  } = useHomeFetch();\n\n  if (error) return <div>Something went wrong ...</div>\n\n  return (\n    <>\n      {/* { !searchTerm && state.results[0] */}\n      { state.results[0]\n        && <HeroImage\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n            title={state.results[0].original_title}\n            text={state.results[0].overview}\n          />\n      }\n\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n        {state.results.map(movie => {\n          // console.log(movie);\n          return (\n            <Thumb\n              key={movie.id}\n              clickable\n              image={\n                movie.poster_path\n                  ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                  : NoImage\n              }\n              movieId={movie.id}\n            />\n          )\n        })}\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n      <Button\n        text='Load More'\n        callback={() => setIsLoadingMore(true)}\n      />\n      )}\n    </>\n  )\n}\n\nexport default Home;\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  border: 1px solid #000;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 70px;\r\n  background: var(--medGrey);\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: var(--maxWidth);\r\n  padding: 0 20px;\r\n\r\n  span {\r\n    font-size: var(--fontMed);\r\n    color: var(--white);\r\n    padding-right: 10px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fantSmall);\r\n    }\r\n  }\r\n`;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n// Styles\r\nimport { Wrapper, Content } from './BreadCrumb.styles';\r\n\r\nconst BreadCrumb = ({ movieTitle }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <Link to='/'>\r\n          <span>Home</span>\r\n        </Link>\r\n        <span>|</span>\r\n        <span>{movieTitle}</span>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nBreadCrumb.propTypes = {\r\n  movieTitle: PropTypes.string\r\n}\r\n\r\nexport default BreadCrumb;\r\n","import styled from 'styled-components';\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${({ backdrop }) =>\r\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : '#000'};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieInfo 3s;\r\n\r\n  @keyframes animateMovieInfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  /* border: 2px solid lightgreen; */\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgb(0, 0, 0, 0.7);\r\n  border-radius: 10px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-hight: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 40px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n\r\n  .rating-directors {\r\n    /* border: 2px solid pink; */\r\n    display: flex;\r\n    /* justify-content: flex-start; */\r\n  }\r\n\r\n  .score {\r\n    /* border: 1px solid lime; */\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: black;\r\n    font-weight: 800;\r\n    border-radius: 50%;\r\n    margin: 0;\r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Components\r\nimport Thumb from '../Thumb';\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n//Image\r\nimport NoImage from '../../images/no_image.jpg';\r\n//styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\r\n\r\nconst MovieInfo = ({ movie }) => {\r\n  return (\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n      <Content>\r\n        <Thumb\r\n          image={\r\n            movie.poster_path\r\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n              : NoImage\r\n          }\r\n          clickable={false}\r\n          alt='movie-thumb'\r\n        />\r\n        <Text>\r\n          <h1>{movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{movie.overview}</p>\r\n\r\n          <div className='rating-directors'>\r\n            <div>\r\n              <h3>RATING</h3>\r\n              <div className='score'>{movie.vote_average}</div>\r\n            </div>\r\n            <div className='director'>\r\n              <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n              {movie.directors.map((director) => {\r\n                return <p key={director.credit_id}>{director.name}</p>;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </Text>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object,\r\n};\r\n\r\nexport default MovieInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  /* border: 3px solid pink; */\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  /* border: 2px solid lime; */\r\n\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n\r\n  .column {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--medGrey);\r\n    border-radius: 10px;\r\n    margin: 0 20px;\r\n    flex: 1;\r\n\r\n    :first-child {\r\n      margin-left: 0;\r\n    }\r\n\r\n    :last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n\r\n    .column {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Helpers\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n//Styles\r\nimport { Wrapper, Content } from './MovieInfoBar.styles';\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <div className=\"column\">\r\n          <p>Running time: {calcTime(time)}</p>\r\n        </div>\r\n        <div className=\"column\">\r\n          <p>Budget: {convertMoney(budget)}</p>\r\n        </div>\r\n        <div className=\"column\">\r\n          <p>Revenue: {convertMoney(revenue)}</p>\r\n        </div>\r\n      </Content>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n}\r\n\r\nexport default MovieInfoBar;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  border: 1px solid #000;\r\n  color: var(--white);\r\n  background: var(--darkGrey);\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  text-align: center;\r\n\r\n  h3 {\r\n    margin: 10px 0 0 0;\r\n  }\r\n\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 250px;\r\n  object-fit: cover;\r\n  border-radius: 15px;\r\n\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Styles\r\nimport { Wrapper, Image } from './Actor.styles';\r\n\r\nconst Actor = ({ name, character, imageUrl }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Image src={imageUrl} alt='actor-thumb' />\r\n      <h3>{name}</h3>\r\n      <p>{character}</p>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nActor.popTypes = {\r\n  name: PropTypes.string,\r\n  character: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n}\r\n\r\nexport default Actor;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n//Components\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport BreadCrumb from './BreadCrumb';\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from './Actor';\r\n//Hook\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\n\r\n//Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Movie = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return <div>Something went wrong...</div>;\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumb movieTitle={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header='Actors'>\r\n        {movie.actors.map((actor) => {\r\n          return (\r\n            <Actor\r\n              key={actor.credit_id}\r\n              name={actor.name}\r\n              character={actor.character}\r\n              imageUrl={\r\n                actor.profile_path\r\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                  : NoImage\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { useState, useEffect } from 'react';\r\nimport API from '../API';\r\n//Helpers\r\nimport { isPersistedState } from '../helpers';\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        const movie = await API.fetchMovie(movieId);\r\n        const credits = await API.fetchCredits(movieId);\r\n        // Get directors only\r\n        const directors = credits.crew.filter(\r\n          (member) => member.job === 'Director'\r\n        );\r\n\r\n        setState({\r\n          ...movie,\r\n          actors: credits.cast,\r\n          directors: directors,\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    const sessionState = isPersistedState(movieId);\r\n\r\n    if (sessionState) {\r\n      setState(sessionState);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetchMovie();\r\n  }, [movieId]);\r\n\r\n  // Write to session storage\r\n  useEffect(() => {\r\n    sessionStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state])\r\n\r\n  return {\r\n    state,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n","import React from 'react';\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      NotFound\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px;\n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535;\n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5 rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', san-serif;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","import React from 'react';\n// Routing\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\n//Components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n\n//Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Routes>\n      <Route path='/' element={<Home />} />\n      <Route path='/:movieId' element={<Movie />} />\n      <Route path='/*' element={<NotFound />} />\n    </Routes>\n    <GlobalStyle />\n  </Router>\n);\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}